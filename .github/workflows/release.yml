name: Release Build

on:
  push:
    tags:
      - 'v*.*.*'
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '.github/**'

jobs:
  build-and-release:
    name: Build and Create Release
    runs-on: nomsterrunner
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'
          cache: true
          
      - name: Install dependencies (system and Go packages)
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc libgl1-mesa-dev xorg-dev gcc-mingw-w64-x86-64 gcc-mingw-w64 zip
          go mod download
        
      - name: Extract version from tag
        id: get_version
        run: |
          # Extract version from tag (v1.2.3 -> 1.2.3)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          
          # Also update the version in FyneApp.toml
          sed -i "s/Version = \".*\"/Version = \"$VERSION\"/" FyneApp.toml
          
      - name: Build for Windows
        env:
          CGO_ENABLED: 1
          GOOS: windows
          GOARCH: amd64
          CC: x86_64-w64-mingw32-gcc
        run: |
          # Cross-compile for Windows
          go build -o eu-clams.exe ./cmd/app
          
      - name: Create release ZIP file
        run: |
          mkdir -p release
          zip -r eu-clams-${{ steps.get_version.outputs.VERSION }}.zip eu-clams.exe templates/

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            eu-clams-${{ steps.get_version.outputs.VERSION }}.zip
          name: EU-CLAMS v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
